"use strict";(()=>{var e={};e.id=807,e.ids=[807],e.modules={11185:e=>{e.exports=require("mongoose")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},78893:e=>{e.exports=require("buffer")},84770:e=>{e.exports=require("crypto")},76162:e=>{e.exports=require("stream")},21764:e=>{e.exports=require("util")},10653:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>b,patchFetch:()=>y,requestAsyncStorage:()=>z,routeModule:()=>g,serverHooks:()=>f,staticGenerationAsyncStorage:()=>h});var n={};t.r(n),t.d(n,{GET:()=>l,PUT:()=>p});var i=t(73278),a=t(45002),s=t(54877),o=t(71309),d=t(1035),u=t(47861),c=t(16910),m=t(15110);async function l(e){try{await (0,d.Z)();let r=await (0,c.Ym)(e);if(!r||"user"!==r.role)return o.NextResponse.json({error:"Authentication required"},{status:401});let t=await u.Z.findById(r.userId).populate("donationHistory","amount charity createdAt receiptNumber").populate({path:"donationHistory",populate:{path:"charity",select:"name logo"}});if(!t)return o.NextResponse.json({error:"User not found"},{status:404});return o.NextResponse.json({user:{id:t._id,name:t.name,email:t.email,phone:t.phone,address:t.address,profileImage:t.profileImage,isVerified:t.isVerified,totalDonated:t.totalDonated,donationHistory:t.donationHistory}})}catch(e){return console.error("Get user profile error:",e),o.NextResponse.json({error:"Internal server error"},{status:500})}}async function p(e){try{await (0,d.Z)();let r=await (0,c.Ym)(e);if(!r||"user"!==r.role)return o.NextResponse.json({error:"Authentication required"},{status:401});let t=await e.json(),n=m.gV.parse(t),i=await u.Z.findByIdAndUpdate(r.userId,n,{new:!0,runValidators:!0});if(!i)return o.NextResponse.json({error:"User not found"},{status:404});return o.NextResponse.json({message:"Profile updated successfully",user:{id:i._id,name:i.name,email:i.email,phone:i.phone,address:i.address}})}catch(e){if(console.error("Update user profile error:",e),"ZodError"===e.name)return o.NextResponse.json({error:"Validation failed",details:e.errors},{status:400});return o.NextResponse.json({error:"Internal server error"},{status:500})}}let g=new i.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/users/profile/route",pathname:"/api/users/profile",filename:"route",bundlePath:"app/api/users/profile/route"},resolvedPagePath:"C:\\Users\\Shivam\\Desktop\\charity-donation-backend (1)\\app\\api\\users\\profile\\route.ts",nextConfigOutput:"",userland:n}),{requestAsyncStorage:z,staticGenerationAsyncStorage:h,serverHooks:f}=g,b="/api/users/profile/route";function y(){return(0,s.patchFetch)({serverHooks:f,staticGenerationAsyncStorage:h})}},16910:(e,r,t)=>{t.d(r,{RA:()=>s,Ym:()=>o});var n=t(67390),i=t.n(n);let a=process.env.JWT_SECRET;if(!a)throw Error("Please define the JWT_SECRET environment variable");function s(e){return i().sign(e,a,{expiresIn:"7d"})}async function o(e){try{let r=function(e){let r=e.headers.get("authorization");return r&&r.startsWith("Bearer ")?r.substring(7):null}(e);if(!r)return null;return i().verify(r,a)}catch(e){return null}}},1035:(e,r,t)=>{t.d(r,{Z:()=>o});var n=t(11185),i=t.n(n);let a=process.env.MONGODB_URI;if(!a)throw Error("Please define the MONGODB_URI environment variable inside .env.local");let s=global.mongoose;s||(s=global.mongoose={conn:null,promise:null});let o=async function(){if(s.conn)return s.conn;s.promise||(s.promise=i().connect(a,{bufferCommands:!1}).then(e=>e));try{s.conn=await s.promise}catch(e){throw s.promise=null,e}return s.conn}},15110:(e,r,t)=>{t.d(r,{Dl:()=>c,K3:()=>u,TW:()=>a,Y0:()=>i,aR:()=>o,db:()=>d,gV:()=>s,hj:()=>m});var n=t(29628);let i=n.z.object({name:n.z.string().min(2,"Name must be at least 2 characters").max(50,"Name cannot exceed 50 characters"),email:n.z.string().email("Invalid email address"),password:n.z.string().min(6,"Password must be at least 6 characters"),phone:n.z.string().regex(/^\+?[\d\s-()]+$/,"Invalid phone number").optional()}),a=n.z.object({email:n.z.string().email("Invalid email address"),password:n.z.string().min(1,"Password is required")}),s=n.z.object({name:n.z.string().min(2).max(50).optional(),phone:n.z.string().regex(/^\+?[\d\s-()]+$/).optional(),address:n.z.object({street:n.z.string(),city:n.z.string(),state:n.z.string(),zipCode:n.z.string(),country:n.z.string()}).optional()}),o=n.z.object({name:n.z.string().min(2,"Name must be at least 2 characters").max(100,"Name cannot exceed 100 characters"),email:n.z.string().email("Invalid email address"),password:n.z.string().min(6,"Password must be at least 6 characters"),registrationNumber:n.z.string().min(1,"Registration number is required"),phone:n.z.string().regex(/^\+?[\d\s-()]+$/,"Invalid phone number"),website:n.z.string().url("Invalid website URL").optional(),description:n.z.string().min(10,"Description must be at least 10 characters").max(1e3,"Description cannot exceed 1000 characters"),mission:n.z.string().min(10,"Mission must be at least 10 characters").max(500,"Mission cannot exceed 500 characters"),vision:n.z.string().min(10,"Vision must be at least 10 characters").max(500,"Vision cannot exceed 500 characters"),category:n.z.enum(["Education","Healthcare","Environment","Poverty","Animal Welfare","Disaster Relief","Human Rights","Arts & Culture","Sports","Other"]),location:n.z.object({address:n.z.string().min(1,"Address is required"),city:n.z.string().min(1,"City is required"),state:n.z.string().min(1,"State is required"),country:n.z.string().min(1,"Country is required")}),bankDetails:n.z.object({accountName:n.z.string().min(1,"Account name is required"),accountNumber:n.z.string().min(1,"Account number is required"),bankName:n.z.string().min(1,"Bank name is required"),ifscCode:n.z.string().min(1,"IFSC code is required"),branch:n.z.string().min(1,"Branch is required")})}),d=n.z.object({email:n.z.string().email("Invalid email address"),password:n.z.string().min(1,"Password is required")}),u=n.z.object({charityId:n.z.string().min(1,"Charity ID is required"),amount:n.z.number().min(1,"Amount must be at least 1"),currency:n.z.enum(["USD","INR","EUR","GBP"]).default("USD"),paymentMethod:n.z.enum(["stripe","razorpay"]),isAnonymous:n.z.boolean().default(!1),message:n.z.string().max(500,"Message cannot exceed 500 characters").optional(),dedicatedTo:n.z.string().max(100,"Dedication cannot exceed 100 characters").optional()}),c=n.z.object({title:n.z.string().min(1,"Title is required").max(200,"Title cannot exceed 200 characters"),description:n.z.string().min(1,"Description is required").max(2e3,"Description cannot exceed 2000 characters"),reportPeriod:n.z.object({startDate:n.z.string().transform(e=>new Date(e)),endDate:n.z.string().transform(e=>new Date(e))}),totalFundsReceived:n.z.number().min(0,"Total funds received must be non-negative"),totalFundsUtilized:n.z.number().min(0,"Total funds utilized must be non-negative"),beneficiariesReached:n.z.number().min(0,"Beneficiaries reached must be non-negative"),projects:n.z.array(n.z.object({name:n.z.string().min(1,"Project name is required"),description:n.z.string().min(1,"Project description is required"),fundsAllocated:n.z.number().min(0,"Funds allocated must be non-negative"),fundsUtilized:n.z.number().min(0,"Funds utilized must be non-negative"),status:n.z.enum(["planned","ongoing","completed","cancelled"]),beneficiaries:n.z.number().min(0,"Beneficiaries must be non-negative"),outcomes:n.z.array(n.z.string())})),financialBreakdown:n.z.array(n.z.object({category:n.z.string().min(1,"Category is required"),amount:n.z.number().min(0,"Amount must be non-negative"),percentage:n.z.number().min(0).max(100,"Percentage must be between 0 and 100"),description:n.z.string().optional()}))}),m=n.z.object({page:n.z.string().transform(Number).default("1"),limit:n.z.string().transform(Number).default("10"),search:n.z.string().optional(),category:n.z.string().optional(),location:n.z.string().optional(),sortBy:n.z.enum(["name","createdAt","totalReceived","rating"]).default("createdAt"),sortOrder:n.z.enum(["asc","desc"]).default("desc")})},47861:(e,r,t)=>{t.d(r,{Z:()=>o});var n=t(11185),i=t.n(n),a=t(93981);let s=new n.Schema({name:{type:String,required:[!0,"Name is required"],trim:!0,maxlength:[50,"Name cannot exceed 50 characters"]},email:{type:String,required:[!0,"Email is required"],unique:!0,lowercase:!0,match:[/^\w+([.-]?\w+)*@\w+([.-]?\w+)*(\.\w{2,3})+$/,"Please enter a valid email"]},password:{type:String,required:[!0,"Password is required"],minlength:[6,"Password must be at least 6 characters"],select:!1},phone:{type:String,match:[/^\+?[\d\s-()]+$/,"Please enter a valid phone number"]},address:{street:String,city:String,state:String,zipCode:String,country:String},profileImage:String,isVerified:{type:Boolean,default:!1},role:{type:String,enum:["user","admin"],default:"user"},donationHistory:[{type:n.Schema.Types.ObjectId,ref:"Donation"}],totalDonated:{type:Number,default:0}},{timestamps:!0});s.pre("save",async function(e){if(!this.isModified("password"))return e();try{let r=await a.ZP.genSalt(12);this.password=await a.ZP.hash(this.password,r),e()}catch(r){e(r)}}),s.methods.comparePassword=async function(e){return a.ZP.compare(e,this.password)};let o=i().models.User||i().model("User",s)}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),n=r.X(0,[379,833,981,390,628],()=>t(10653));module.exports=n})();